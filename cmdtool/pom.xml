<project>
  <modelVersion>4.0.0</modelVersion>

  <properties>
    <projectroot>${basedir}/..</projectroot>
  </properties>

  <parent>
    <groupId>chicksnp-proj</groupId>
    <artifactId>chicksnp</artifactId>
    <version>${chicksnpVersion}</version>
  </parent>

  <artifactId>cmdtool</artifactId>
  <packaging>jar</packaging>
  <name>chicksnp-cmdtool</name>

  <dependencyManagement>
    <dependencies>
      <!-- from AS7 ejb-remote example -->
      <!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
      <!-- JBoss distributes a complete set of Java EE 6 APIs including
	   a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
	   a collection) of artifacts. We use this here so that we always get the correct
	   versions of artifacts. Here we use the jboss-javaee-6.0 stack (you can
	   read this as the JBoss stack of the Java EE 6 APIs). You can actually
	   use this stack with any version of JBoss AS that implements Java EE 6, not
	   just JBoss AS 7! -->
      <!-- dependency>
	<groupId>org.jboss.spec</groupId>
	<artifactId>jboss-javaee-6.0</artifactId>
	<version>3.0.0.Beta1</version>
	<type>pom</type>
	<scope>import</scope>
      </dependency -->

      <!-- FIXME: shouldn't need to specify version and type elements, as they should be inherited -->
      <dependency>
	<groupId>org.wildfly</groupId>
	<artifactId>wildfly-ejb-client-bom</artifactId>
	<version>${wildflyVersion}</version>
	<type>pom</type>
	<scope>import</scope>
      </dependency>
      <dependency>
	<groupId>org.jboss.spec</groupId>
	<artifactId>jboss-javaee-7.0</artifactId>
	<version>${version.jboss.spec.javaee.7.0}</version>
	<type>pom</type>
	<!-- scope>import</scope -->
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>chicksnp-proj</groupId>
      <artifactId>ejbs</artifactId>
      <version>${chicksnpVersion}</version>
      <type>ejb</type>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.ejb</groupId>
      <artifactId>ejb</artifactId>
    </dependency>

    <!-- various dependencies from wildfly quickstart remote client pom.xml -->
    <!-- FIXME: move these to master pom to the extent possible -->

    <!-- Import the transaction spec API, we use runtime scope because we aren't using any direct
         reference to the spec API in our client code -->
    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <!-- Import the EJB 3.1 API, we use runtime scope because we aren't using any direct
         reference to EJB spec API in our client code -->
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <!-- JBoss EJB client API jar. We use runtime scope because the EJB client API
         isn't directly used in this example. We just need it in our runtime classpath -->
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-ejb-client</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <!-- client communications with the server use XNIO -->
    <dependency>
      <groupId>org.jboss.xnio</groupId>
      <artifactId>xnio-api</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <dependency>
      <groupId>org.jboss.xnio</groupId>
      <artifactId>xnio-nio</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <!-- The client needs JBoss remoting to access the server -->
    <dependency>
      <groupId>org.jboss.remoting</groupId>
      <artifactId>jboss-remoting</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <!-- Remote EJB accesses can be secured -->
    <dependency>
      <groupId>org.jboss.sasl</groupId>
      <artifactId>jboss-sasl</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <!-- data serialization for invoking remote EJBs -->
    <dependency>
      <groupId>org.jboss.marshalling</groupId>
      <artifactId>jboss-marshalling-river</artifactId>
      <!-- scope>runtime</scope -->
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.jms</groupId>
      <artifactId>jboss-jms-api_2.0_spec</artifactId>
      <!-- scope>provided</scope -->
    </dependency>

    <!-- JNDI -->
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-remote-naming</artifactId>
      <version>2.0.4.Final</version>
    </dependency>

    <!-- persistence is actually provided by hibernate, so we depend on that during runtime -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>4.0.1.Final</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>javamisc</groupId>
      <artifactId>javamisc</artifactId>
      <type>jar</type>
    </dependency>
  </dependencies>

  <build>
    <finalName>chicksnp-cmdtool</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-shade-plugin</artifactId>
	<version>1.3.3</version>
        <executions>
	  <execution>
	    <phase>package</phase>
	    <goals>
	      <goal>shade</goal>
	    </goals>
	    <configuration>
	      <!-- artifactSet>
	        <includes>
		  <include>jboss-stuff:*</include>
		  <include>javamisc:*</include>
		</includes>
	      </artifactSet -->
	      <transformers>
	        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
		  <mainClass>uk.ac.pirbright.chicksnp.cmdtool.Main</mainClass>
		  <!--manifestEntries>
		    <FIXME: quite unsatisfactory having to feed jars into the classpath like this - can't these be pulled from the system dependencies...??>
		    <Class-Path>${jbosshome}/common/lib/jnpserver.jar ${jbosshome}/common/lib/hibernate-core.jar ${jbosshome}/client/jbosssx-client.jar ${jbosshome}/client/jboss-security-spi.jar ${jbosshome}/client/jbossall-client.jar</Class-Path>
		  </manifestEntries -->
	        </transformer>
	      </transformers>
	    </configuration>
	  </execution>
        </executions>
      </plugin>
      <!-- plugin>
        <groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jar-plugin</artifactId>
	<configuration>
	  <archive>
	    <manifestEntries>
	      <Class-Path>${project.parent.basedir}${project.parent.basedir}/ejbs/target/chicksnp-ejb.jar ${jbosshome}/common/lib/jnpserver.jar ${jbosshome}/common/lib/hibernate-core.jar ${jbosshome}/client/jbosssx-client.jar ${jbosshome}/client/jboss-security-spi.jar ${jbosshome}/client/jbossall-client.jar</Class-Path>
	      <Main-Class>uk.ac.pirbright.chicksnp.cmdtool.Main</Main-Class>
	    </manifestEntries>
	    <!- manifest>
              <addClasspath>true</addClasspath>
	    </manifest ->
	  </archive>
	</configuration>
      </plugin -->
    </plugins>
  </build>

</project>
